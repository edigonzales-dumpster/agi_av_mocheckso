buildscript {
    repositories {
        maven { url "https://repo.osgeo.org/repository/release/" }
        maven { url "http://jars.interlis.ch" }
        maven { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
    }
    dependencies {
        classpath "ch.so.agi:gretl:2.0.227"
    }
}

apply plugin: "ch.so.agi.gretl"


import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.util.TaskUtil
import java.nio.file.Paths
import java.nio.file.Files
import java.io.FileOutputStream
import org.apache.commons.net.ftp.*

def pathToTempFolder = System.getProperty("java.io.tmpdir")
def localFileName = "mocheckso_errors.csv"

def server = "ftp.infogrips.ch";
def systemTypeKey = "WINDOWS"; 
def user = "vaso";
def password = "vaso123";
def remoteFileName = "\\DM01AVSO24LV95\\ERROR\\MOCHECKSO_ERRORS.CSV";


task downloadFile() {
    doLast {
        def ftp = new FTPClient()

        try {            
            ftp.connect(server, 21)
            ftp.login(user, password)
            ftp.configure(new FTPClientConfig(systemTypeKey)); 

            int reply = ftp.getReplyCode();
            if(!FTPReply.isPositiveCompletion(reply)) {
                throw new Exception("FTP server refused connection.")
            }

            String fileName = Paths.get(pathToTempFolder, localFileName).toFile().getAbsoluteFile()
            FileOutputStream fos = new FileOutputStream(fileName)

            boolean response = ftp.retrieveFile(remoteFileName, fos)
            if (response == false) {
                throw new Exception("Could not retrieve file: " + remoteremoteFileNameFile)
            }
            println "File downloaded: " + fileName
        } catch (Exception e) {
            GradleException ge = TaskUtil.toGradleException(e)
            throw ge;
        } finally {
            if(ftp.isConnected()) {
                try {
                    ftp.disconnect()
                } catch(IOException e) {
                    // do nothing
                }
            }
        }
    }
}
